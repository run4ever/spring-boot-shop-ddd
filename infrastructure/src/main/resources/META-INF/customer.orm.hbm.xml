<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.1"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

	<!--ce fichier permet d'enlever les annotations dans les entity du domaine pour isoler la couche domaine-->
	<!--par contre ce n'est valable qu'avec des modeles relationnels, pas avec les services web par exemple-->
	<!--donc vaut mieux utiliser les classes JPA dans infra avec Adapter/Mapper-->

	<access>FIELD</access>

	<entity
		class="fr.training.samples.spring.shop.domain.customer.Customer">
		<table name="CUSTOMER" />
		<attributes>
			<basic name="name" />

			<embedded name="password">
				<attribute-override name="value">
					<column name="PASSWORD" />
				</attribute-override>
			</embedded>

			<embedded name="email">
				<attribute-override name="value">
					<column name="EMAIL" />
				</attribute-override>
			</embedded>

			<embedded name="address">
				<attribute-override name="street">
					<column name="STREET" />
				</attribute-override>
				<attribute-override name="city">
					<column name="CITY" />
				</attribute-override>
				<attribute-override name="country">
					<column name="COUNTRY" />
				</attribute-override>
				<attribute-override name="postalCode">
					<column name="POSTAL_CODE" />
				</attribute-override>
			</embedded>
		</attributes>
	</entity>

	<entity
		class="fr.training.samples.spring.shop.domain.order.Order">
		<table name="ORDERS" />
		<attributes>
			<basic name="total" />
			<many-to-one name="customer" fetch="LAZY">
				<join-column name="CUSTOMER_ID" />
			</many-to-one>

			<one-to-many name="orderItems" fetch="LAZY"
				orphan-removal="true">
				<join-column name="ORDER_ID" referenced-column-name="ID"
					nullable="false" updatable="false" />
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>

		</attributes>
	</entity>

	<entity
		class="fr.training.samples.spring.shop.domain.order.OrderItem">
		<table name="ORDER_ITEM" />
		<attributes>
			<basic name="quantity" />
			<many-to-one name="item" fetch="LAZY">
				<join-column name="ITEM_ID" />
			</many-to-one>
		</attributes>
	</entity>

	<entity class="fr.training.samples.spring.shop.domain.item.Item">
		<table name="ITEM" />
		<attributes>
			<basic name="description" />
			<basic name="price" />
		</attributes>
	</entity>

</entity-mappings>